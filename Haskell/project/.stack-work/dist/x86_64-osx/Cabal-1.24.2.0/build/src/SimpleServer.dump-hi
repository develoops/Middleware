
==================== FINAL INTERFACE ====================
2017-06-05 22:20:21.715259 UTC

interface project-0.1.0.0-A3bp1bchPHa6IfVHSogVMv:SimpleServer 8002
  interface hash: 039dfab2cb80fdaa78b2dd31ae90b929
  ABI hash: 9bbfc2e891e52f2fa42f12624def75db
  export-list hash: 70363b0b6fb4ae3a2a1d6ecfb0c94d5a
  orphan hash: cd7c7c231b3816558c843029c66f48a8
  flag hash: 727e0adebc9748dc8e424166443818c0
  sig of: Nothing
  used TH splices: False
  where
exports:
  SimpleServer.runServer
module dependencies: Data Routes Type
package dependencies: aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-7eVVX59t93gCl3XctAmuil
                      containers-0.5.7.1@containers-0.5.7.1
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-7iiF2mP1jcB6tVSPgIyBOi
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-AASpkRsupvWAQEpNM5DQI
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hasbolt-0.1.0.2@hasbolt-0.1.0.2-48VwuBPpKda4SUnQUpSa8V
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      http-date-0.0.6.1@http-date-0.0.6.1-5HOvcIxha088JfGZJ7KCrN
                      http-types-0.9.1@http-types-0.9.1-JfqUh6MfqqR8Kpp4vaoPhu
                      http2-1.6.3@http2-1.6.3-CCNOUEIMNPCIwgKnOg84uS integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-2nctQ8abLa4F4qppuBPWFl
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-simple-0.4.0.5@network-simple-0.4.0.5-IajrPOJHmVZJcXm3bjN8OW
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      psqueues-0.2.2.3@psqueues-0.2.2.3-9nDehYbroydEusqdFJopTa
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa
                      regex-compat-0.95.1@regex-compat-0.95.1-7IGKoiHTSKL3opdpEZ0pO8
                      regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-1AOSrWwsk6kGNVrZRdikMV
                      resourcet-1.1.9@resourcet-1.1.9-JF0GCaCqGTSEsAmsa8Gm9e
                      scientific-0.3.4.13@scientific-0.3.4.13-2xII4ZQfmEWrTXn2dbZc3
                      scotty-0.11.0@scotty-0.11.0-CMUq0HF5rCHLZakQ9yxfyS
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-ANLyYjCKvHm5Mv911o5sOC
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      vault-0.3.0.7@vault-0.3.0.7-HJSJzPTOq6IJLrOGPrOio
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      wai-3.2.1.1@wai-3.2.1.1-LwWBwTKnzp42SSU6xDDotQ
                      wai-extra-3.0.19.1@wai-extra-3.0.19.1-H2wkB6doEWrHOkms4OTHJV
                      wai-logger-2.3.0@wai-logger-2.3.0-7fJMlPgYga27SP0FbZNDve
                      warp-3.2.12@warp-3.2.12-9tPcvyXgjMd9KhqwCDhfaa
                      word8-0.1.2@word8-0.1.2-9WDPGCTpW7JJnsiAQavtd1
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hasbolt-0.1.0.2@hasbolt-0.1.0.2-48VwuBPpKda4SUnQUpSa8V:Database.Bolt.Connection.Instances
         hasbolt-0.1.0.2@hasbolt-0.1.0.2-48VwuBPpKda4SUnQUpSa8V:Database.Bolt.Value.Instances
         hasbolt-0.1.0.2@hasbolt-0.1.0.2-48VwuBPpKda4SUnQUpSa8V:Database.Bolt.Value.Structure
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         project-0.1.0.0-A3bp1bchPHa6IfVHSogVMv:Type
         regex-base-0.93.2@regex-base-0.93.2-AYjYAsBidAc8f5XNm9b2Aa:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex-posix-0.95.2-KQJt29lnRa45d6bFn9XkFO:Text.Regex.Posix.String
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-JF0GCaCqGTSEsAmsa8Gm9e:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.0@scotty-0.11.0-CMUq0HF5rCHLZakQ9yxfyS:Web.Scotty.Internal.Types
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hasbolt-0.1.0.2@hasbolt-0.1.0.2-48VwuBPpKda4SUnQUpSa8V:Database.Bolt 1cca00e23f124bebfe3931123596ce55
import  -/  hasbolt-0.1.0.2@hasbolt-0.1.0.2-48VwuBPpKda4SUnQUpSa8V:Database.Bolt.Connection.Type e1297497276cd22a929ee86b3fb6c185
import  -/  Data ada3cb31747333a211b2d6724078e276
  exports: 4f28be61bed105df5c3a51bff0318a4c
  constructState c687c2b2a92a4984f24d4475cc482f63
import  -/  Routes bcc8cb4f878b923769cf27737397c86e
  exports: a2d51c20495387a86b8747e75b261ed4
  graphR dd9f9d680377d7249df10f15a6e92fe7
  mainR 2732848cfa994210b042f70b5750ce4f
  movieR 370cfe8f42b2d9872ab32c2a779cce75
  searchR 78af1c2d306a275f661fd3dfa2c88417
import  -/  scotty-0.11.0@scotty-0.11.0-CMUq0HF5rCHLZakQ9yxfyS:Web.Scotty.Route 9cc149bdcead47b2921ab619c09b9cd0
import  -/  scotty-0.11.0@scotty-0.11.0-CMUq0HF5rCHLZakQ9yxfyS:Web.Scotty.Trans 0479a2781d6fb055e5161171fcafda9c
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy 547b2cb8d74b3b03ee583c506a59422a
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Reader 1b607a084a390ae0e50e8f8dcbf2541a
import  -/  wai-extra-3.0.19.1@wai-extra-3.0.19.1-H2wkB6doEWrHOkms4OTHJV:Network.Wai.Middleware.RequestLogger 22d0ab89b0db5c2c883ecfb556fd6f03
316f37e546bf7ae3047b93ac2e65c586
  $s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
                  (SimpleServer.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$cp1Applicative
                     @ r)
                  (\ @ a (eta :: a) (eta1 :: r) ->
                   GHC.Base.const
                     @ (GHC.Types.IO a)
                     @ r
                     (GHC.Base.returnIO @ a eta)
                     eta1)
                    `cast`
                  (forall (a :: <*>_N).
                   <a>_R
                   ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N <r>_R <GHC.Types.IO>_R <a>_N))
                  (SimpleServer.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$c<*>
                     @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c*>
                     @ GHC.Types.IO
                     @ r
                     SimpleServer.$s$fApplicativeReaderT_$dApplicative)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*
                     @ GHC.Types.IO
                     @ r
                     SimpleServer.$s$fApplicativeReaderT_$dApplicative) -}
a670c4a4de79b6dcadb683ee1721d5fc
  $s$fApplicativeReaderT_$cpure ::
    a -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ r @ a (eta :: a) (eta1 :: r) ->
                 GHC.Base.const
                   @ (GHC.Types.IO a)
                   @ r
                   (GHC.Base.returnIO @ a eta)
                   eta1)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N <r>_R <GHC.Types.IO>_R <a>_N)) -}
379261ebb9320169d757c39fc13a41e3
  $s$fApplicativeReaderT_$dApplicative ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fApplicativeIO -}
4bfb29aa01484838b0b3832513d4c7cc
  $s$fApplicativeReaderT_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,1*C1(U))))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                     `cast`
                   (<r -> GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                   (\ (r1 :: r) ->
                    GHC.Base.$fApplicativeIO_$sap
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ (a -> b)
                         f
                         r1)
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ a
                         v
                         r1))) -}
e775f76ea232c9d3ac92e47eca6c4948
  $s$fApplicativeReaderT_$s$fApplicativeReaderT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                SimpleServer.$s$fApplicativeReaderT_$s$fFunctorReaderT -}
8525a3552b07773d3ac23a40b15e47f8
  $s$fApplicativeReaderT_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
                  (SimpleServer.$s$fApplicativeReaderT_$s$fFunctorReaderT_$cfmap @ r)
                  (SimpleServer.$s$fApplicativeReaderT_$s$fFunctorReaderT_$c<$
                     @ r) -}
bb9165b38a4b4e974c72c59e958e9d49
  $s$fApplicativeReaderT_$s$fFunctorReaderT_$c<$ ::
    a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U><C(C(S(SL))),1*C1(C1(U(U,A)))><L,U><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ r
                   @ a
                   @ b
                   (eta :: a)
                   (eta1 :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (eta2 :: r) ->
                 let {
                   f :: b -> a {- Arity: 1 -} = \ (ds :: b) -> eta
                 } in
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> GHC.Types.IO a)
                    @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                    (\ (tpl :: r -> GHC.Types.IO a) -> tpl)
                      `cast`
                    (<r -> GHC.Types.IO a>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N <r>_R <GHC.Types.IO>_R <a>_N))
                    (let {
                       g :: r -> GHC.Types.IO b
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ GHC.Types.IO
                           @ b
                           eta1
                     } in
                     (\ (x :: r)
                        (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      (GHC.Base.$fFunctorIO_$cfmap @ b @ a f (g x))
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        eta3)
                       `cast`
                     (<r>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N <r>_R <GHC.Types.IO>_R <a>_N)
                   eta2)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N <r>_R <GHC.Types.IO>_R <a>_N)) -}
a43dfd66183c927508556e4d22df0754
  $s$fApplicativeReaderT_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: a -> b)
                   (eta :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                   (eta1 :: r) ->
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> GHC.Types.IO b)
                    @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                    (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                      `cast`
                    (<r -> GHC.Types.IO b>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                    (let {
                       g :: r -> GHC.Types.IO a
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ GHC.Types.IO
                           @ a
                           eta
                     } in
                     (\ (x :: r)
                        (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      (GHC.Base.$fFunctorIO_$cfmap @ a @ b f (g x))
                        `cast`
                      (GHC.Types.N:IO[0] <b>_R)
                        eta2)
                       `cast`
                     (<r>_R ->_R Sym (GHC.Types.N:IO[0] <b>_R))))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N <r>_R <GHC.Types.IO>_R <b>_N)
                   eta1)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a -> b>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N <r>_R <GHC.Types.IO>_R <b>_N)) -}
942ec5177cf09d93154cddabdb61dd07
  $s$fMonadIOReaderT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
                  (SimpleServer.$s$fMonadIOReaderT_$s$fMonadIOReaderT_$cp1MonadIO
                     @ r)
                  (\ @ a (eta :: GHC.Types.IO a) ->
                   GHC.Base.const
                     @ (GHC.Types.IO a)
                     @ r
                     (GHC.Base.id @ (GHC.Types.IO a) eta))
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N <r>_R <GHC.Types.IO>_R <a>_N)) -}
13ca32341d537f5bf98ef7e132e4e5c1
  $s$fMonadIOReaderT_$s$fMonadIOReaderT_$cp1MonadIO ::
    GHC.Base.Monad (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT -}
e5b95f49e3c8c0d97c16fc4e620b7012
  $s$fMonadIOReaderT_$s$fMonadReaderT ::
    GHC.Base.Monad (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
                  (SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$cp1Monad @ r)
                  (SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$c>>= @ r)
                  (SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$c>> @ r)
                  (SimpleServer.$s$fApplicativeReaderT_$cpure @ r)
                  (SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$cfail @ r) -}
2c4b2f13a79e3ddb2a1a4c9588051969
  $s$fMonadIOReaderT_$s$fMonadReaderT_$c>> ::
    Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                   (k :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                     `cast`
                   (<r -> GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                   (\ (r1 :: r) ->
                    GHC.Base.bindIO
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ b
                         k
                         r1))) -}
133f909552224de24e36862835268cd8
  $s$fMonadIOReaderT_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
    -> (a -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,U)))><L,1*C1(C1(C1(U(U,U))))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a)
                   (k :: a -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO b)
                   (\ (tpl :: r -> GHC.Types.IO b) -> tpl)
                     `cast`
                   (<r -> GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N <r>_R <GHC.Types.IO>_R <b>_N))
                   (\ (r1 :: r) ->
                    GHC.Base.bindIO
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ GHC.Types.IO
                         @ b
                         (k a1)
                         r1))) -}
23919a19d7e2cab16ba6b6566916f1d6
  $s$fMonadIOReaderT_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO a
  {- Arity: 3, Strictness: <B,U><B,A><B,U>x,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r @ a (msg :: GHC.Base.String) ->
                 let {
                   eta :: GHC.Types.IO a = GHC.Base.$fMonadIO_$cfail @ a msg
                 } in
                 (\ (eta1 :: r) -> GHC.Base.const @ (GHC.Types.IO a) @ r eta eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N <r>_R <GHC.Types.IO>_R <a>_N))) -}
3e403f97dc592abcc2a986701256a757
  $s$fMonadIOReaderT_$s$fMonadReaderT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT r GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                SimpleServer.$s$fApplicativeReaderT -}
6a7781eb959626fea76b6eb51830d77e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SimpleServer.$trModule2
                   SimpleServer.$trModule1) -}
e6f903640a729dcdfb984a4e00ac0493
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SimpleServer"#) -}
50fc7ed7c0f64e239277a46e74572c69
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "project-0.1.0.0-A3bp1bchPHa6IfVHSogVMv"#) -}
543ffc90cadd363cb13fb0d8315997a5
  type Port = GHC.Types.Int
a82c11a4363c8dfc4394a92317760b69
  runServer ::
    SimpleServer.Port
    -> Database.Bolt.Connection.Type.BoltCfg -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <L,U(U)><L,U(U(U),U(U),U,U(U),A,U,U(U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                SimpleServer.runServer1
                  `cast`
                (<SimpleServer.Port>_R
                 ->_R <Database.Bolt.Connection.Type.BoltCfg>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
31b4b30d29d0fde7f8a51a5e93c6fc75
  runServer1 ::
    SimpleServer.Port
    -> Database.Bolt.Connection.Type.BoltCfg
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <L,U(U)><L,U(U(U),U(U),U,U(U),A,U,U(U),U,U)><S,U>,
     Unfolding: (\ (port :: SimpleServer.Port)
                   (config :: Database.Bolt.Connection.Type.BoltCfg)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.Pool.$wcreatePool
                        @ Database.Bolt.Connection.Type.Pipe
                        (Database.Bolt.Connection.Pipe.connect
                           @ GHC.Types.IO
                           Control.Monad.IO.Class.$fMonadIOIO
                           config)
                        Data.constructState3
                          `cast`
                        (<Database.Bolt.Connection.Type.Pipe>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        4#
                        Data.constructState2
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.UTC.N:NominalDiffTime[0])))
                        1#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 let {
                   state :: Data.ServerState {- Strictness: m -}
                   = Data.ServerState ipv1
                 } in
                 (Web.Scotty.Trans.scottyOptsT
                    @ (Control.Monad.Trans.Reader.ReaderT
                         Data.ServerState GHC.Types.IO)
                    @ GHC.Types.IO
                    @ Data.Text.Internal.Lazy.Text
                    (SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT
                       @ Data.ServerState)
                    Control.Monad.IO.Class.$fMonadIOIO
                    (Web.Scotty.Internal.Types.Options
                       Web.Scotty.Internal.Types.$fDefaultOptions3
                       (Network.Wai.Handler.Warp.Settings.Settings
                          port
                          Network.Wai.Handler.Warp.Settings.defaultSettings16
                          Network.Wai.Handler.Warp.Settings.defaultOnException1
                            `cast`
                          (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                           ->_R <GHC.Exception.SomeException>_R
                           ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                          Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                          Network.Wai.Handler.Warp.Settings.defaultSettings14
                            `cast`
                          (<Network.Socket.Types.SockAddr>_R
                           ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                          Network.Wai.Handler.Warp.Settings.defaultSettings13
                            `cast`
                          (<Network.Socket.Types.SockAddr>_R
                           ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                          Network.Wai.Handler.Warp.Settings.defaultSettings12
                          (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                          Web.Scotty.Internal.Types.$fDefaultOptions2
                          Network.Wai.Handler.Warp.Settings.defaultSettings11
                          Network.Wai.Handler.Warp.Settings.defaultSettings9
                            `cast`
                          (Sym (GHC.Types.N:IO[0] <()>_R))
                          Network.Wai.Handler.Warp.Settings.defaultSettings10
                            `cast`
                          (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                            -> GHC.Types.IO ()>_R
                           ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                          GHC.Types.False
                          Network.Wai.Handler.Warp.Settings.defaultSettings8
                            `cast`
                          (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                          Network.Wai.Handler.Warp.Settings.defaultSettings6
                          Network.Wai.Handler.Warp.Settings.defaultSettings4
                          Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                          Network.Wai.Handler.Warp.Settings.defaultSettings3
                          GHC.Types.True
                          Network.Wai.Handler.Warp.Settings.defaultSettings2
                            `cast`
                          (<Network.Wai.Internal.Request>_R
                           ->_R <Network.HTTP.Types.Status.Status>_R
                           ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                           ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                          Network.Wai.Handler.Warp.Settings.defaultSettings1
                            `cast`
                          (<Network.Wai.Internal.Request>_R
                           ->_R <Data.ByteString.Internal.ByteString>_R
                           ->_R <GHC.Integer.Type.Integer>_R
                           ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                          (GHC.Base.Nothing @ GHC.Types.Int)))
                    (\ (ds :: Control.Monad.Trans.Reader.ReaderT
                                Data.ServerState GHC.Types.IO Network.Wai.Internal.Response) ->
                     ds
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Data.ServerState>_R
                          <GHC.Types.IO>_R
                          <Network.Wai.Internal.Response>_N)
                       state)
                    SimpleServer.runServer2
                      `cast`
                    (Trans
                         (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                   <Web.Scotty.Internal.Types.ScottyState
                                      Data.Text.Internal.Lazy.Text
                                      (Control.Monad.Trans.Reader.ReaderT
                                         Data.ServerState GHC.Types.IO)>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <()>_N))
                         (Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                   <Data.Text.Internal.Lazy.Text>_N
                                   <Control.Monad.Trans.Reader.ReaderT
                                      Data.ServerState GHC.Types.IO>_N) <()>_N)))
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv }) -}
343b7e12caa462e1d032f9952cef0c53
  runServer10 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        SimpleServer.runServer11 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
ca8ba3f99f9dbc29df8014f249ac7e4e
  runServer11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/graph"#) -}
703f174e72f2e2e3019f761214ab4b29
  runServer12 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text Data.WebM ()
  {- Unfolding: (SimpleServer.runServer7
                   Network.HTTP.Types.Method.GET
                   SimpleServer.runServer13
                   Routes.searchR1
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Web.Scotty.Internal.Types.ActionEnv>_R
                                  <Control.Monad.Trans.State.Lazy.StateT
                                     Web.Scotty.Internal.Types.ScottyResponse
                                     (Control.Monad.Trans.Reader.ReaderT
                                        Data.ServerState GHC.Types.IO)>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     ()>_N))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Web.Scotty.Internal.Types.ActionEnv
                                          (Control.Monad.Trans.State.Lazy.StateT
                                             Web.Scotty.Internal.Types.ScottyResponse
                                             (Control.Monad.Trans.Reader.ReaderT
                                                Data.ServerState GHC.Types.IO))>_R
                                       <()>_N))
                             (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                       <Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Data.ServerState GHC.Types.IO>_R) <()>_N)))) -}
140bae0d65ea791781d523f742f1addd
  runServer13 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture
                   SimpleServer.runServer14) -}
d9398ccfcc287d640577735bdfcf31fd
  runServer14 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        SimpleServer.runServer15 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
c4b50c35d764e10878e10fd124e11c63
  runServer15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/search"#) -}
ada0d19507155c7e9eebd7d7e6c96cc8
  runServer16 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text Data.WebM ()
  {- Unfolding: (SimpleServer.runServer7
                   Network.HTTP.Types.Method.GET
                   SimpleServer.runServer17
                   Routes.movieR1
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Web.Scotty.Internal.Types.ActionEnv>_R
                                  <Control.Monad.Trans.State.Lazy.StateT
                                     Web.Scotty.Internal.Types.ScottyResponse
                                     (Control.Monad.Trans.Reader.ReaderT
                                        Data.ServerState GHC.Types.IO)>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     ()>_N))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Web.Scotty.Internal.Types.ActionEnv
                                          (Control.Monad.Trans.State.Lazy.StateT
                                             Web.Scotty.Internal.Types.ScottyResponse
                                             (Control.Monad.Trans.Reader.ReaderT
                                                Data.ServerState GHC.Types.IO))>_R
                                       <()>_N))
                             (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                       <Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Data.ServerState GHC.Types.IO>_R) <()>_N)))) -}
b60b326818680b54435a87c33d377f52
  runServer17 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture
                   SimpleServer.runServer18) -}
e9d59e1c1fffb48fdb416a51f77b0940
  runServer18 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        SimpleServer.runServer19 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
7db324ecf9b5bb52e75cedc26d0085a5
  runServer19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/movie/:title"#) -}
19f1952973a33a0990782b6599589494
  runServer2 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text
      (Control.Monad.Trans.Reader.ReaderT Data.ServerState GHC.Types.IO)
    -> Data.Functor.Identity.Identity
         ((),
          Web.Scotty.Internal.Types.ScottyState
            Data.Text.Internal.Lazy.Text
            (Control.Monad.Trans.Reader.ReaderT Data.ServerState GHC.Types.IO))
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (s1 :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text
                            (Control.Monad.Trans.Reader.ReaderT
                               Data.ServerState GHC.Types.IO)) ->
                 SimpleServer.runServer16
                   `cast`
                 (Trans
                      (Web.Scotty.Internal.Types.N:ScottyT[0]
                           <Data.Text.Internal.Lazy.Text>_N
                           <Control.Monad.Trans.Reader.ReaderT
                              Data.ServerState GHC.Types.IO>_N <()>_N)
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Web.Scotty.Internal.Types.ScottyState
                              Data.Text.Internal.Lazy.Text
                              (Control.Monad.Trans.Reader.ReaderT
                                 Data.ServerState GHC.Types.IO)>_N
                           <Data.Functor.Identity.Identity>_R
                           <()>_N))
                   (case (SimpleServer.runServer12
                            `cast`
                          (Trans
                               (Web.Scotty.Internal.Types.N:ScottyT[0]
                                    <Data.Text.Internal.Lazy.Text>_N
                                    <Control.Monad.Trans.Reader.ReaderT
                                       Data.ServerState GHC.Types.IO>_N <()>_N)
                               (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <Web.Scotty.Internal.Types.ScottyState
                                       Data.Text.Internal.Lazy.Text
                                       (Control.Monad.Trans.Reader.ReaderT
                                          Data.ServerState GHC.Types.IO)>_N
                                    <Data.Functor.Identity.Identity>_R
                                    <()>_N))
                            (case (SimpleServer.runServer8
                                     `cast`
                                   (Trans
                                        (Web.Scotty.Internal.Types.N:ScottyT[0]
                                             <Data.Text.Internal.Lazy.Text>_N
                                             <Control.Monad.Trans.Reader.ReaderT
                                                Data.ServerState GHC.Types.IO>_N <()>_N)
                                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                             <Web.Scotty.Internal.Types.ScottyState
                                                Data.Text.Internal.Lazy.Text
                                                (Control.Monad.Trans.Reader.ReaderT
                                                   Data.ServerState GHC.Types.IO)>_N
                                             <Data.Functor.Identity.Identity>_R
                                             <()>_N))
                                     (case (SimpleServer.runServer3
                                              `cast`
                                            (Trans
                                                 (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                      <Data.Text.Internal.Lazy.Text>_N
                                                      <Control.Monad.Trans.Reader.ReaderT
                                                         Data.ServerState GHC.Types.IO>_N <()>_N)
                                                 (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                      <Web.Scotty.Internal.Types.ScottyState
                                                         Data.Text.Internal.Lazy.Text
                                                         (Control.Monad.Trans.Reader.ReaderT
                                                            Data.ServerState GHC.Types.IO)>_N
                                                      <Data.Functor.Identity.Identity>_R
                                                      <()>_N))
                                              (Web.Scotty.Internal.Types.addMiddleware
                                                 @ Data.Text.Internal.Lazy.Text
                                                 @ (Control.Monad.Trans.Reader.ReaderT
                                                      Data.ServerState GHC.Types.IO)
                                                 Network.Wai.Middleware.RequestLogger.logStdoutDev
                                                 s1))
                                             `cast`
                                           (Data.Functor.Identity.N:Identity[0]
                                                <((),
                                                  Web.Scotty.Internal.Types.ScottyState
                                                    Data.Text.Internal.Lazy.Text
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       Data.ServerState
                                                       GHC.Types.IO))>_R) of wild { (,) a1 s' ->
                                      s' }))
                                    `cast`
                                  (Data.Functor.Identity.N:Identity[0]
                                       <((),
                                         Web.Scotty.Internal.Types.ScottyState
                                           Data.Text.Internal.Lazy.Text
                                           (Control.Monad.Trans.Reader.ReaderT
                                              Data.ServerState
                                              GHC.Types.IO))>_R) of wild { (,) a1 s' ->
                             s' }))
                           `cast`
                         (Data.Functor.Identity.N:Identity[0]
                              <((),
                                Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text
                                  (Control.Monad.Trans.Reader.ReaderT
                                     Data.ServerState GHC.Types.IO))>_R) of wild { (,) a1 s' ->
                    s' })) -}
a4fd821327760637f79c7234c021228e
  runServer3 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text Data.WebM ()
  {- Unfolding: (SimpleServer.runServer7
                   Network.HTTP.Types.Method.GET
                   SimpleServer.runServer4
                   Routes.mainR1
                     `cast`
                   (Trans
                        (<Web.Scotty.Internal.Types.ActionEnv>_R
                         ->_R Trans
                                  (<Web.Scotty.Internal.Types.ScottyResponse>_R
                                   ->_R Trans
                                            (<Data.ServerState>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <(Data.Either.Either
                                                               (Web.Scotty.Internal.Types.ActionError
                                                                  Data.Text.Internal.Lazy.Text)
                                                               (),
                                                             Web.Scotty.Internal.Types.ScottyResponse)>_R))
                                            (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                      <*>_N
                                                      <Data.ServerState>_R
                                                      <GHC.Types.IO>_R
                                                      <(Data.Either.Either
                                                          (Web.Scotty.Internal.Types.ActionError
                                                             Data.Text.Internal.Lazy.Text)
                                                          (),
                                                        Web.Scotty.Internal.Types.ScottyResponse)>_N)))
                                  (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                            <Web.Scotty.Internal.Types.ScottyResponse>_N
                                            <Data.WebM>_R
                                            <Data.Either.Either
                                               (Web.Scotty.Internal.Types.ActionError
                                                  Data.Text.Internal.Lazy.Text)
                                               ()>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Web.Scotty.Internal.Types.ActionEnv>_R
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Web.Scotty.Internal.Types.ScottyResponse Data.WebM>_R
                                       <Data.Either.Either
                                          (Web.Scotty.Internal.Types.ActionError
                                             Data.Text.Internal.Lazy.Text)
                                          ()>_N))
                             (Trans
                                  (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                            <Web.Scotty.Internal.Types.ActionError
                                               Data.Text.Internal.Lazy.Text>_N
                                            <Control.Monad.Trans.Reader.ReaderT
                                               Web.Scotty.Internal.Types.ActionEnv
                                               (Control.Monad.Trans.State.Lazy.StateT
                                                  Web.Scotty.Internal.Types.ScottyResponse
                                                  Data.WebM)>_R
                                            <()>_N))
                                  (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                            <Data.Text.Internal.Lazy.Text>_N
                                            <Data.WebM>_R) <()>_N))))) -}
f2e9f2c9fa965e400a19bba31af23baa
  runServer4 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture
                   SimpleServer.runServer5) -}
d58a6972f286a7c46bf1e312fdc05fdb
  runServer5 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        SimpleServer.runServer6 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
3d7f5dbaf937e64be6257b5d64d9e64e
  runServer6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
d140b3f09a88852da1176661002de0f0
  runServer7 ::
    Network.HTTP.Types.Method.StdMethod
    -> Web.Scotty.Internal.Types.RoutePattern
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text Data.WebM ()
    -> Web.Scotty.Internal.Types.ScottyT
         Data.Text.Internal.Lazy.Text Data.WebM ()
  {- Unfolding: (Web.Scotty.Route.addroute
                   @ Data.Text.Internal.Lazy.Text
                   @ Data.WebM
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   (SimpleServer.$s$fMonadIOReaderT @ Data.ServerState)) -}
fe210a52b7ce23d725c256772edd0a13
  runServer8 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text Data.WebM ()
  {- Unfolding: (SimpleServer.runServer7
                   Network.HTTP.Types.Method.GET
                   SimpleServer.runServer9
                   Routes.graphR1
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Web.Scotty.Internal.Types.ActionEnv>_R
                                  <Control.Monad.Trans.State.Lazy.StateT
                                     Web.Scotty.Internal.Types.ScottyResponse
                                     (Control.Monad.Trans.Reader.ReaderT
                                        Data.ServerState GHC.Types.IO)>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     ()>_N))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Web.Scotty.Internal.Types.ActionEnv
                                          (Control.Monad.Trans.State.Lazy.StateT
                                             Web.Scotty.Internal.Types.ScottyResponse
                                             (Control.Monad.Trans.Reader.ReaderT
                                                Data.ServerState GHC.Types.IO))>_R
                                       <()>_N))
                             (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                       <Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Data.ServerState GHC.Types.IO>_R) <()>_N)))) -}
f2e0206a16c20d655c39f33e20739f1f
  runServer9 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture
                   SimpleServer.runServer10) -}
"SPEC/SimpleServer $fApplicativeReaderT @ IO _" [ALWAYS] forall @ r
                                                                ($dApplicative :: GHC.Base.Applicative
                                                                                    GHC.Types.IO)
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ GHC.Types.IO
                                                  @ r
                                                  $dApplicative
  = SimpleServer.$s$fApplicativeReaderT @ r
"SPEC/SimpleServer $fApplicativeReaderT_$c<*> @ IO _" [ALWAYS] forall @ r
                                                                      ($dApplicative :: GHC.Base.Applicative
                                                                                          GHC.Types.IO)
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ GHC.Types.IO
                                                        @ r
                                                        $dApplicative
  = SimpleServer.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$c<*>
      @ r
"SPEC/SimpleServer $fApplicativeReaderT_$cp1Applicative @ IO _" [ALWAYS] forall @ r
                                                                                ($dApplicative :: GHC.Base.Applicative
                                                                                                    GHC.Types.IO)
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cp1Applicative @ GHC.Types.IO
                                                                  @ r
                                                                  $dApplicative
  = SimpleServer.$s$fApplicativeReaderT_$s$fApplicativeReaderT_$cp1Applicative
      @ r
"SPEC/SimpleServer $fApplicativeReaderT_$cpure @ IO _" [ALWAYS] forall @ r
                                                                       ($dApplicative :: GHC.Base.Applicative
                                                                                           GHC.Types.IO)
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cpure @ GHC.Types.IO
                                                         @ r
                                                         $dApplicative
  = SimpleServer.$s$fApplicativeReaderT_$cpure @ r
"SPEC/SimpleServer $fFunctorReaderT @ IO _" [ALWAYS] forall @ r
                                                            ($dFunctor :: GHC.Base.Functor
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Reader.$fFunctorReaderT @ GHC.Types.IO
                                              @ r
                                              $dFunctor
  = SimpleServer.$s$fApplicativeReaderT_$s$fFunctorReaderT @ r
"SPEC/SimpleServer $fFunctorReaderT_$c<$ @ IO _" [ALWAYS] forall @ r
                                                                 ($dFunctor :: GHC.Base.Functor
                                                                                 GHC.Types.IO)
  Control.Monad.Trans.Reader.$fFunctorReaderT_$c<$ @ GHC.Types.IO
                                                   @ r
                                                   $dFunctor
  = SimpleServer.$s$fApplicativeReaderT_$s$fFunctorReaderT_$c<$ @ r
"SPEC/SimpleServer $fFunctorReaderT_$cfmap @ IO _" [ALWAYS] forall @ r
                                                                   ($dFunctor :: GHC.Base.Functor
                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ GHC.Types.IO
                                                     @ r
                                                     $dFunctor
  = SimpleServer.$s$fApplicativeReaderT_$s$fFunctorReaderT_$cfmap @ r
"SPEC/SimpleServer $fMonadIOReaderT @ IO _" [ALWAYS] forall @ r
                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadIOReaderT @ GHC.Types.IO
                                              @ r
                                              $dMonadIO
  = SimpleServer.$s$fMonadIOReaderT @ r
"SPEC/SimpleServer $fMonadIOReaderT_$cp1MonadIO @ IO _" [ALWAYS] forall @ r
                                                                        ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                        GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadIOReaderT_$cp1MonadIO @ GHC.Types.IO
                                                          @ r
                                                          $dMonadIO
  = SimpleServer.$s$fMonadIOReaderT_$s$fMonadIOReaderT_$cp1MonadIO
      @ r
"SPEC/SimpleServer $fMonadReaderT @ IO _" [ALWAYS] forall @ r
                                                          ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT @ GHC.Types.IO
                                            @ r
                                            $dMonad
  = SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT @ r
"SPEC/SimpleServer $fMonadReaderT_$c>> @ IO _" [ALWAYS] forall @ r
                                                               ($dMonad :: GHC.Base.Monad
                                                                             GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>> @ GHC.Types.IO
                                                 @ r
                                                 $dMonad
  = SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$c>> @ r
"SPEC/SimpleServer $fMonadReaderT_$c>>= @ IO _" [ALWAYS] forall @ r
                                                                ($dMonad :: GHC.Base.Monad
                                                                              GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ GHC.Types.IO
                                                  @ r
                                                  $dMonad
  = SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$c>>= @ r
"SPEC/SimpleServer $fMonadReaderT_$cfail @ IO _" [ALWAYS] forall @ r
                                                                 ($dMonad :: GHC.Base.Monad
                                                                               GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ GHC.Types.IO
                                                   @ r
                                                   $dMonad
  = SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$cfail @ r
"SPEC/SimpleServer $fMonadReaderT_$cp1Monad @ IO _" [ALWAYS] forall @ r
                                                                    ($dMonad :: GHC.Base.Monad
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Reader.$fMonadReaderT_$cp1Monad @ GHC.Types.IO
                                                      @ r
                                                      $dMonad
  = SimpleServer.$s$fMonadIOReaderT_$s$fMonadReaderT_$cp1Monad @ r
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

